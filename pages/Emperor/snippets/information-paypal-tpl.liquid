
<div class="dynamic-checkout dynamic-checkout--loading">
	<div class="dynamic-checkout__skeleton">
		<div class="placeholder-line placeholder-line--animated"></div>
		<div class="placeholder-line placeholder-line--animated"></div>
	</div>
	<div class="dynamic-checkout__buttons">
		<div id="paypal-container"></div>
	</div>
</div>
<script>
	const clientId = CONFIGDATA.payMethod.paypal?.clientId
	var setmeal = JSON.parse(localStorage.getItem('currentRate'));
	if (clientId) {
		var jsStr = `?client-id=${clientId}&currency=${setmeal.currency}`;
		var PAYPAL_SCRIPT = 'https://www.paypal.com/sdk/js' + jsStr;
		var script = document.createElement('script');
		script.setAttribute('src', PAYPAL_SCRIPT);
		document.body.append(script);
		if (script.readyState) {
			script.onreadystatechange = function () {
				if (script.readyState == 'complete' || script.readyState == 'loaded') {
					setPaypal()
				}
			}
		} else {
			script.onload = function () {
				setPaypal()
			}
		}
	}
	function setPaypal() {
		closePlaceholder();
		// paypal支付
		paypal.Buttons({
			// Call your server to set up the transaction
			createOrder: function (data, actions) {
				// facebook埋点
				let $facebookId_val = window.shopInfo.facebookId
				if ($facebookId_val && $facebookId_val != '' && Object.prototype.toString.call($facebookId_val).slice(8, -1) != 'Null') {
					const eventID = getRandomString(5)
					fbq('track', 'InitiateCheckout', { eventID });
					// facebook api数据转化
					const content_ids = []
					cart_info.goodsList.forEach(item => {
						content_ids.push(item.skuId)
					})
					const custom_data = {
						"value": $('#totalPrice').data('money'),
						"currency": setmeal.currency,
						"content_ids": content_ids,
						"content_type": "product"
					}
					var data = facebookApiParam(custom_data, 'InitiateCheckout', eventID)
					const facebookIdArr = $facebookId_val.split(',')
					facebookIdArr.forEach(item => {
						facebookApi($facebookId_val, data)
					})
				}
				//ga 像素埋点
				const $googleId = window.shopInfo.googleId
				if ($googleId && $googleId != '' && Object.prototype.toString.call($googleId).slice(8, -1) != 'Null') {
					ga('create', $googleId);
					ga('require', 'ec');
					cart_info.goodsList.forEach(item => {
						ga('ec:addProduct', {
							'id': item.goodsId,
							'name': item.goodsName,
							'price': item.discountPrice,
							'quantity': item.quantity
						});
					})
					ga('ec:setAction', 'checkout', {
						'option': 'Paypal'
					});
					ga('send', 'event', 'checkout', 'click', 'Begin Checkout');
				}
				//  PayPal支付跟踪代码埋点
				let $Tiktok_val = window.shopInfo.Tiktok
				let $tiktok_status = window.shopInfo.tiktokType == 1 ? false : true
				if ($Tiktok_val && $Tiktok_val != '' && Object.prototype.toString.call($Tiktok_val).slice(8, -1) != 'Null' && $tiktok_status == 'true') {
					let TiktokParam = {
						contents: tiktokArr,
						value: Math.round(tiktoValue * 100 + parseFloat(tiktokShipping || 0) * 100) / 100,
						currency: 'USD',
					}
					ttq.track('Checkout', TiktokParam)
					localStorage.setItem('TiktokParam', JSON.stringify(TiktokParam));
				}
				sendAnalyze('payment', edata, goodsData);
				// 清除remark
				sessionStorage.removeItem('remark');
				const productData = cart_info;
				productData.shippingMoney = edata.shipping
				localStorage.setItem('productData', JSON.stringify(productData));
				if (orderParams.hasOwnProperty('adressParam')) {
					delete orderParams.adressParam
				}
				return fetch('/vshop-site/api/v1/pre/orders/orders', {
					method: 'post',
					body: JSON.stringify(orderParams),
					headers: {
						"Authorization": 'Bearer' + getStorage('localstorageId')
					}
				}).then(function (res) {
					console.log("123-->", res);
					return res.json();
				}).then(function (orderData) {
					console.log("orderData-->", orderData);
					if (orderData.code != 0) {
						alertTxt(orderData.msg)

						setTimeout(() => {
							window.location.replace("/");
						}, 3000)
					} else {
						return orderData.data.order_number;
					}
				});
			},
			// Call your server to finalize the transaction
			onApprove: function (data, actions) {
				$('html').append('<div class="paymentLoading"><div><img src="../assets/images/loading.gif" alt=""><p>Please wait a moment before finishing the payment.....</p><div></div>')
				return fetch('/vshop-third/api/v1/third/' + data.orderID + '/capture', {
					method: 'post',
					headers: {
						"Authorization": 'Bearer' + getStorage('localstorageId')
					}
				}).then(function (res) {
					console.log("res--", res);
					return res.json();
				}).then(function (orderData) {
					// Three cases to handle:
					//   (1) Recoverable INSTRUMENT_DECLINED -> call actions.restart()
					//   (2) Other non-recoverable errors -> Show a failure message
					//   (3) Successful transaction -> Show a success / thank you message

					// Your server defines the structure of 'orderData', which may differ
					var errorDetail = Array.isArray(orderData.details) && orderData.details[0];
					if (errorDetail && errorDetail.issue === 'INSTRUMENT_DECLINED') {
						// Recoverable state, see: "Handle Funding Failures"
						// https://developer.paypal.com/docs/checkout/integration-features/funding-failure/
						return actions.restart();
					}
					if (errorDetail) {
						var msg = 'Sorry, your transaction could not be processed.';
						if (errorDetail.description) msg += '\n\n' + errorDetail.description;
						if (orderData.debug_id) msg += ' (' + orderData.debug_id + ')';
						// Show a failure message
						return alertTxt(res.msg)
					}
					// Show a success message to the buyer
					let money = $('#totalPrice').attr('data-tax-money');
					if (orderData.statusCode === 201 && orderData.status === "COMPLETED") {
						window.location.href = `/payment-results.html?status=1&transcationId=${data.orderID}&currency=${totalRate.currency}&amount=${money}`;
					} else {
						window.location.href = `/payment-results.html?status=0`;
					}
				});
			}
		}).render('#paypal-container');
	}
	// paypal预加载遮盖
	function closePlaceholder() {
		$(".dynamic-checkout--loading") && $(".dynamic-checkout--loading").removeClass('dynamic-checkout--loading')
	}


</script>
